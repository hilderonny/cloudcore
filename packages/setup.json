{"entities":{"apps":[{"id":"9a80bfa4-72a9-43ba-b71c-521520afbb6c","label":"Setup","userid":"6f6b93ae-94e5-45b0-904f-83a8b37e1627","ispublic":true}],"routers":[{"id":"0d689490-685b-4260-9bc5-7ab712666b6e","code":"/**\r\n * Dieser Router soll Datenbankbackups erstellen.\r\n */\r\nvar childprocess = require('child_process');\r\nvar router = require('express').Router();\r\n\r\nrouter.get('/', (_, res) => {\r\n    var resultbuffer = childprocess.execSync('pg_dump'); // Benutzt die Einstellungen aus den Environment Variablen\r\n    res.setHeader(\"Content-Type\",\"text/plain\");\r\n    res.send(resultbuffer);\r\n});\r\n\r\nmodule.exports = router;\r\n","url":"/backup","userid":"6f6b93ae-94e5-45b0-904f-83a8b37e1627","ispublic":true},{"id":"c11bd450-76b4-45cb-afce-619cbdcaadd6","code":"var router = require('express').Router();\n\nrouter.post('/', async (req, res) => {\n    var query = req.body.query;\n    var result = await req.db.query(query);\n    res.json(result.error ? result.error : result.rows);\n});\n\nmodule.exports = router;","url":"/api-sqlconsole","userid":"6f6b93ae-94e5-45b0-904f-83a8b37e1627","ispublic":true}],"views":[{"id":"9c8c25ec-2fe7-4ad3-bd63-1935f743e1cd","content":"<!DOCTYPE html>\n<html>\n    <head>\n        <link rel=\"stylesheet\" href=\"/assets/slds.css\">\n        <script src=\"/ccc/cc-globalnav\"></script>\n        <script src=\"/monaco-editor/min/vs/loader.js\"></script>\n        <script>\n        var monacoEditor;\n        var currentView;\n        var currentRouter;\n\n        function openInNewTab() {\n            if (!currentView) return;\n            window.open(currentView.url, '_blank');\n        }\n\n        async function del() {\n            if (currentView) {\n                if (!confirm('Soll die View wirklich gelöscht werden?')) return;\n                await fetch('/api-data/views/' + currentView.id, { method: 'DELETE' });\n                location.href = '?';\n            } else if (currentRouter) {\n                if (!confirm('Soll der Router wirklich gelöscht werden?')) return;\n                await fetch('/api-data/routers/' + currentRouter.id, { method: 'DELETE' });\n                location.href = '?';\n            }\n        }\n\n        async function createView() {\n            var url = prompt('Welche URL?', '/');\n            if (!url) return;\n            var contenttype = prompt('Welcher Content Type?', 'text/html');\n            if (!contenttype) return;\n            var id = (await (await fetch('/api-data/views', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ url: url, contenttype: contenttype, content: '' }) })).json())[0].id;\n            location.href = '?views/' + id;\n        }\n\n        async function createRouter() {\n            var url = prompt('Welche URL?', '/');\n            if (!url) return;\n            var id = (await (await fetch('/api-data/routers', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ url: url, code: '' }) })).json())[0].id;\n            location.href = '?routers/' + id;\n        }\n\n        async function save() {\n            if (currentView) {\n                var content = monacoEditor.getValue();\n                await fetch('/api-data/views/' + currentView.id, { method: 'PUT', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ content: content }) });\n            } else if (currentRouter) {\n                var code = monacoEditor.getValue();\n                await fetch('/api-data/routers/' + currentRouter.id, { method: 'PUT', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ code: code }) });\n            }\n            var button = document.querySelector('#savebutton');\n            button.classList.add('green');\n            setTimeout(() => {\n                button.classList.remove('green');\n            }, 1000);\n        }\n\n        async function loadView(id) {\n            currentRouter = false;\n            currentView = (await (await fetch('/api-data/views/' + id)).json())[0];\n            monacoEditor.setValue(currentView.content);\n            var language = monaco.languages.getLanguages().find(l => l.mimetypes && (l.mimetypes.indexOf(currentView.contenttype) >= 0));\n            monaco.editor.setModelLanguage(monacoEditor.getModel(), language ? language.id : 'plaintext');\n            document.querySelectorAll('content table .selected').forEach(e => e.classList.remove('selected'));\n            document.getElementById('view-' + id).classList.add('selected');\n            window.history.pushState(null, null, '?views/' + id);\n        }\n\n        async function loadRouter(id) {\n            currentView = false;\n            currentRouter = (await (await fetch('/api-data/routers/' + id)).json())[0];\n            monacoEditor.setValue(currentRouter.code);\n            monaco.editor.setModelLanguage(monacoEditor.getModel(), 'javascript');\n            document.querySelectorAll('content table .selected').forEach(e => e.classList.remove('selected'));\n            document.getElementById('router-' + id).classList.add('selected');\n            window.history.pushState(null, null, '?routers/' + id);\n        }\n\n        async function listViewsAndRouters() {\n            var views = await (await fetch('/api-data/list/views/id,url')).json();\n            views.sort((v1, v2) => v1.url > v2.url ? 1 : -1);\n            var viewlist = document.getElementById('views');\n            viewlist.innerHTML = '';\n            for (var view of views) {\n                viewlist.innerHTML += '<tr id=\"view-' + view.id + '\"><td><a href=\"#\" onclick=\"loadView(\\'' + view.id + '\\');\">' + view.url + '</a></td></tr>';\n            }\n            var routers = await (await fetch('/api-data/list/routers/id,url')).json();\n            routers.sort((r1, r2) => r1.url > r2.url ? 1 : -1);\n            var routerlist = document.getElementById('routers');\n            routerlist.innerHTML = '';\n            for (var router of routers) {\n                routerlist.innerHTML += '<tr id=\"router-' + router.id + '\"><td><a href=\"#\" onclick=\"loadRouter(\\'' + router.id + '\\');\">' + router.url + '</a></td></tr>';\n            }\n        }\n\n        window.addEventListener('load', function() {\n            // MonacoEditor initialisieren\n            require.config({ paths: { 'vs': '/monaco-editor/min/vs' }});\n            require(['vs/editor/editor.main'], function() {\n                monacoEditor = monaco.editor.create(document.getElementById('editor'));\n                if (location.search.length > 1) {\n                    var parts = location.search.substring(1).split('/');\n                    if (parts[0] === 'views') {\n                        loadView(parts[1]);\n                    } else {\n                        loadRouter(parts[1]);\n                    }\n                };\n                monacoEditor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S, save);\n            });        \n            listViewsAndRouters();\n        });\n\n        window.addEventListener('resize', function() {\n            if (monacoEditor) monacoEditor.layout();\n        });\n\n        </script>\n    </head>\n    <body>\n        <cc-globalnav selectedurl=\"/setup/editor\"></cc-globalnav>\n        <header>\n            <img src=\"https://fonts.gstatic.com/s/i/materialicons/code/v4/24px.svg\"/>\n            <subtitle>Setup</subtitle>\n            <page-title>Editor</page-title>\n            <button onclick=\"createView();\">+ View</button>\n            <button onclick=\"createRouter();\">+ Router</button>\n            <button onclick=\"save();\" id=\"savebutton\">Speichern</button>\n            <button onclick=\"del();\">Löschen</button>\n            <button onclick=\"openInNewTab();\">Öffnen</button>\n            <button>\n                <select onchange=\"monaco.editor.setTheme(this.value);\">\n                    <option value=\"vs\">Hell</option>\n                    <option value=\"vs-dark\">Dunkel</option>\n                    <option value=\"hc-black\">Hoher Kontrast</option>\n                </select>\n            </button>\n        </header>\n        <columns class=\"two-fix-flex\">\n            <content style=\"width:300px;\">\n                <table>\n                    <thead><tr><th>Views</th></tr></thead>\n                    <tbody id=\"views\"></tbody>\n                </table>\n                <table>\n                    <thead><tr><th>Routers</th></tr></thead>\n                    <tbody id=\"routers\"></tbody>\n                </table>\n            </content>\n            <content id=\"editor\" style=\"overflow: hidden;\"></content>\n        </columns>\n    </body>\n</html>","contenttype":"text/html","url":"/setup/editor","userid":"6f6b93ae-94e5-45b0-904f-83a8b37e1627","ispublic":true},{"id":"6f3433f6-12ea-4f23-b121-2731bc26150e","content":"<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <link rel=\"stylesheet\" href=\"/assets/slds.css\">\r\n        <script src=\"/ccc/cc-globalnav\"></script>\r\n        <script>\r\n\r\n            var tablename;\r\n\r\n            async function createcolumn() {\r\n                var name = document.querySelector('#columnname').value;\r\n                var datatype = document.querySelector('#datatype').value;\r\n                await fetch('/api-schema/columns/' + tablename + '/' + name + '/' + datatype, { method: 'POST' });\r\n                location.href = '/setup/tables/columns?' + tablename;\r\n            }\r\n\r\n            window.addEventListener('load', () => {\r\n                tablename = location.search.substring(1);\r\n                document.getElementById('tablename').innerHTML = tablename;\r\n                document.getElementById('columnslink').setAttribute('href', '/setup/tables/columns?' + tablename);\r\n            });\r\n\r\n        </script>\r\n    </head>\r\n    <body>\r\n        <cc-globalnav selectedurl=\"/setup/tables\"></cc-globalnav>\r\n        <header>\r\n            <img src=\"https://fonts.gstatic.com/s/i/materialicons/table_chart/v4/24px.svg\"/>\r\n            <subtitle>Setup &gt; <a href=\"/setup/tables\">Tabellen</a> &gt; <a href=\"#\" id=\"columnslink\"><span id=\"tablename\"></span> - Spalten</a></subtitle>\r\n            <page-title>Neue Spalte</page-title>\r\n            <button onclick=\"createcolumn();\">Erstellen</button>\r\n        </header>\r\n        <content>\r\n            <input-field>\r\n                <input id=\"columnname\" placeholder=\"Name\" />\r\n                <label>Name</label>\r\n            </input-field>\r\n            <input-field>\r\n                <select id=\"datatype\">\r\n                    <option value=\"boolean\">BOOLEAN</option>\r\n                    <option value=\"int\">INT</option>\r\n                    <option value=\"json\">JSON</option>\r\n                    <option value=\"numeric\">NUMERIC</option>\r\n                    <option value=\"real\">REAL</option>\r\n                    <option value=\"text\" selected>TEXT</option>\r\n                    <option value=\"uuid\">UUID</option>\r\n                </select>\r\n                <label>Datentyp</label>\r\n            </input-field>\r\n        </content>\r\n    </body>\r\n</html>\r\n","contenttype":"text/html","url":"/setup/tables/columns/create","userid":"6f6b93ae-94e5-45b0-904f-83a8b37e1627","ispublic":true},{"id":"7aa3d0b9-35cd-49f7-9db0-667a3b2a02a3","content":"<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <link rel=\"stylesheet\" href=\"/assets/slds.css\">\r\n        <script src=\"/ccc/cc-globalnav\"></script>\r\n        <script>\r\n\r\n            var tablename;\r\n\r\n            function createcontent() {\r\n                location.href = '/setup/tables/content/edit?' + tablename;\r\n            }\r\n\r\n            function htmlencode(str) {\r\n                return ('' + str).replace(/</g, '&lt;').replace(/>/g, '&gt;')\r\n            }\r\n\r\n            async function deletecontent(id) {\r\n                if (!confirm('Soll der Inhalt mit der Id \"' + id + '\" wirklich gelöscht werden?')) return;\r\n                await fetch('/api-data/' + tablename + '/' + id, { method: 'DELETE' });\r\n                loadcontent();\r\n            }\r\n\r\n            async function loadcontent() {\r\n                var content = await (await fetch('/api-data/list/' + tablename)).json();\r\n                var tbody = document.querySelector('tbody');\r\n                tbody.innerHTML = '';\r\n                console.log(content);\r\n                var columns = {};\r\n                var maxlength = 1000;\r\n                for (var entity of content) {\r\n                    var tr = document.createElement('tr');\r\n                    tbody.appendChild(tr);\r\n                    for (var key of Object.keys(entity)) {\r\n                        columns[key] = true;\r\n                    }\r\n                    tr.innerHTML = Object.values(entity).map(v => {\r\n                        if ((typeof v) === 'object') v = JSON.stringify(v);\r\n                        var text = htmlencode(v && v.length > maxlength ? v.substring(0, maxlength) : v);\r\n                        return '<td title=\"' + text.replace(/\\\"/g, '&quot;') + '\">' + text + '</td>';\r\n                    }).join('');\r\n                    tr.innerHTML += '<td><a href=\"/setup/tables/content/edit?' + tablename + '/' + entity.id + '\">Bearbeiten</a></td><td><a href=\"#\" onclick=\"deletecontent(\\'' + entity.id + '\\');\">Löschen</a></td>';\r\n                }\r\n                var thead = document.querySelector('thead');\r\n                thead.innerHTML = '<tr>' + Object.keys(columns).map(c => '<th>' + c + '</th>').join('') + '<th></th><th></th></tr>';\r\n            }\r\n\r\n            window.addEventListener('load', () => {\r\n                tablename = location.search.substring(1);\r\n                document.getElementById('tablename').innerHTML = tablename;\r\n                loadcontent();\r\n            });\r\n        \r\n        </script>\r\n    </head>\r\n    <body>\r\n        <cc-globalnav selectedurl=\"/setup/tables\"></cc-globalnav>\r\n        <header>\r\n            <img src=\"https://fonts.gstatic.com/s/i/materialicons/table_chart/v4/24px.svg\"/>\r\n            <subtitle>Setup &gt; <a href=\"/setup/tables\">Tabellen</a></subtitle>\r\n            <page-title><span id=\"tablename\"></span> - Inhalt</page-title>\r\n            <button onclick=\"createcontent();\">Neuer Inhalt</button>\r\n        </header>\r\n        <content>\r\n            <table>\r\n                <thead></thead>\r\n                <tbody></tbody>\r\n            </table>\r\n        </content>\r\n    </body>\r\n</html>\r\n","contenttype":"text/html","url":"/setup/tables/content","userid":"6f6b93ae-94e5-45b0-904f-83a8b37e1627","ispublic":true},{"id":"956dda69-6cc6-406a-aa38-75a021581cf6","content":"<!DOCTYPE html>\n<html>\n    <head>\n        <link rel=\"stylesheet\" href=\"/assets/slds.css\">\n        <style>\n            textarea {\n                border: none;\n                width: 100%;\n                height: 100%;\n                padding: 4px;\n                font-family: monospace;\n                background-color: black;\n                color: lightgreen;\n                font-size: 14px;\n            }\n            #output {\n                white-space: pre;\n                font-family: monospace;\n            }\n        </style>\n        <script src=\"/ccc/cc-globalnav\"></script>\n        <script>\n\n            async function run() {\n                var tf = document.getElementById('input');\n                var sql = tf.value;\n                var result = await (await fetch('/api-sqlconsole/', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ query: sql }) })).json();\n                var output = document.getElementById('output');\n                output.innerText = sql + '\\n\\n' + JSON.stringify(result, null, 2);\n                tf.focus();\n            }\n\n            window.addEventListener('load', () => { document.getElementById('input').focus(); });\n\n        </script>\n    </head>\n    <body>\n        <cc-globalnav selectedurl=\"/setup/sqlconsole\"></cc-globalnav>\n        <header>\n            <img src=\"https://fonts.gstatic.com/s/i/materialicons/local_shipping/v4/24px.svg\"/>\n            <subtitle>Setup</subtitle>\n            <page-title>SQL Konsole</page-title>\n            <button onclick=\"run();\">Ausführen</button>\n        </header>\n        <content>\n            <textarea id=\"input\"></textarea>\n        </content>\n        <content id=\"output\"></content>\n    </body>\n</html>","contenttype":"text/html","url":"/setup/sqlconsole","userid":"6f6b93ae-94e5-45b0-904f-83a8b37e1627","ispublic":true},{"id":"a583b281-22f3-44fd-9db0-d4e2b9a1bc14","content":"<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <link rel=\"stylesheet\" href=\"/assets/slds.css\">\r\n        <script src=\"/ccc/cc-globalnav\"></script>\r\n        <script>\r\n\r\n            var tablename, entityid;\r\n\r\n            async function save() {\r\n                var content = {};\r\n                for (var key  of keys) {\r\n                    content[key] = document.getElementById(key).value;\r\n                }\r\n                if (entityid) {\r\n                    await fetch('/api-data/' + tablename + '/' + entityid, { method: 'PUT', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(content) });\r\n                } else {\r\n                    entityid = (await (await fetch('/api-data/' + tablename, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(content) })).json())[0].id;\r\n                    location.href += '/' + entityid;\r\n                }\r\n            }\r\n\r\n            async function loadcontent() {\r\n                var content;\r\n                if (entityid) {\r\n                    content = (await (await fetch('/api-data/' + tablename + '/' + entityid)).json())[0];\r\n                } else {\r\n                    content = {};\r\n                    var columns = await (await fetch('/api-schema/columns/' + tablename)).json();\r\n                    for (var column of columns) {\r\n                        if (column.table_schema !== 'public') continue;\r\n                        content[column.column_name] = '';\r\n                    }\r\n                }\r\n                delete content.id;\r\n                var contentelement = document.querySelector('content');\r\n                contentelement.innerHTML = '';\r\n                keys = Object.keys(content);\r\n                for (var key of keys) {\r\n                    var inputfield = document.createElement('input-field');\r\n                    inputfield.innerHTML = '<textarea id=\"' + key + '\"></textarea><label>' + key + '</label>';\r\n                    contentelement.appendChild(inputfield);\r\n                    var value = content[key];\r\n                    if (typeof(value) === 'object') value = JSON.stringify(value);\r\n                    document.getElementById(key).value = value;\r\n                }\r\n            }\r\n\r\n            window.addEventListener('load', () => {\r\n                var urlparts = location.search.substring(1).split('/');\r\n                tablename = urlparts[0];\r\n                entityid = urlparts[1];\r\n                document.getElementById('tablename').innerHTML = tablename;\r\n                document.getElementById('contentlink').setAttribute('href', '/setup/tables/content?' + tablename);\r\n                loadcontent();\r\n            });\r\n\r\n        </script>\r\n    </head>\r\n    <body>\r\n        <cc-globalnav selectedurl=\"/setup/tables\"></cc-globalnav>\r\n        <header>\r\n            <img src=\"https://fonts.gstatic.com/s/i/materialicons/table_chart/v4/24px.svg\"/>\r\n            <subtitle>Setup &gt; <a href=\"/setup/tables\">Tabellen</a> &gt; <a href=\"#\" id=\"contentlink\"><span id=\"tablename\"></span> - Inhalt</a></subtitle>\r\n            <page-title>Inhalt bearbeiten</page-title>\r\n            <button onclick=\"save();\">Speichern</button>\r\n        </header>\r\n        <content>\r\n        </content>\r\n    </body>\r\n</html>\r\n","contenttype":"text/html","url":"/setup/tables/content/edit","userid":"6f6b93ae-94e5-45b0-904f-83a8b37e1627","ispublic":true},{"id":"bac21733-0859-4457-a613-9300d7ec3de7","content":"<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <link rel=\"stylesheet\" href=\"/assets/slds.css\">\r\n        <script src=\"/ccc/cc-globalnav\"></script>\r\n        <script>\r\n\r\n            async function createtable() {\r\n                var tablename = window.prompt('Name der neuen Tabelle');\r\n                if(!tablename) return;\r\n                await fetch('/api-schema/tables/' + tablename, { method: 'POST' });\r\n                loadtables();\r\n            }\r\n\r\n            async function deletetable(tablename) {\r\n                if (!confirm('Soll die Tabelle \"' + tablename + '\" wirklich gelöscht werden?')) return;\r\n                await fetch('/api-schema/tables/' + tablename, { method: 'DELETE' });\r\n                loadtables();\r\n            }\r\n\r\n            async function loadtables() {\r\n                var tables = await (await fetch('/api-schema/tables')).json();\r\n                tables.sort((a, b) => a.table_name > b.table_name ? 1 : -1);\r\n                var tbody = document.querySelector('tbody');\r\n                tbody.innerHTML = '';\r\n                for (var table of tables) {\r\n                    var tr = document.createElement('tr');\r\n                    tr.innerHTML = '<td>' + table.table_name + '</td><td><a href=\"/setup/tables/content?' + table.table_name + '\">Daten</a></td><td><a href=\"/setup/tables/columns?' + table.table_name + '\">Felder</a></td><td><a href=\"#\" onclick=\"deletetable(\\'' + table.table_name + '\\');\">Löschen</a></td>';\r\n                    tbody.appendChild(tr);\r\n                }\r\n            }\r\n\r\n            window.addEventListener('load', loadtables);\r\n\r\n        </script>\r\n    </head>\r\n    <body>\r\n        <cc-globalnav selectedurl=\"/setup/tables\"></cc-globalnav>\r\n        <header>\r\n            <img src=\"https://fonts.gstatic.com/s/i/materialicons/table_chart/v4/24px.svg\"/>\r\n            <subtitle>Setup</subtitle>\r\n            <page-title>Tabellen</page-title>\r\n            <button onclick=\"createtable();\">Neue Tabelle</button>\r\n            <button onclick=\"window.open('/backup/', '_blank');\">Download Backup</button>\r\n        </header>\r\n        <content>\r\n            <table>\r\n                <thead><tr><th>Name</th><th></th><th></th><th></th></tr></thead>\r\n                <tbody></tbody>\r\n            </table>\r\n        </content>\r\n    </body>\r\n</html>","contenttype":"text/html","url":"/setup/tables","userid":"6f6b93ae-94e5-45b0-904f-83a8b37e1627","ispublic":true},{"id":"d4d1f905-b12a-4d78-b6e7-0820d8ba4de4","content":"<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <link rel=\"stylesheet\" href=\"/assets/slds.css\">\r\n        <script src=\"/ccc/cc-globalnav\"></script>\r\n        <script>\r\n\r\n            var tablename;\r\n\r\n            function createcolumn() {\r\n                location.href = '/setup/tables/columns/create?' + tablename;\r\n            }\r\n\r\n            async function deletecolumn(columnname) {\r\n                if (!confirm('Really delete column \"' + columnname + '\"?')) return;\r\n                await fetch('/api-schema/columns/' + tablename + '/' + columnname, { method: 'DELETE' });\r\n                loadcolumns();\r\n            }\r\n\r\n            async function loadcolumns() {\r\n                var columns = await (await fetch('/api-schema/columns/' + tablename)).json();\r\n                var tbody = document.querySelector('tbody');\r\n                tbody.innerHTML = '';\r\n                for (var column of columns) {\r\n                    if (column.table_schema !== 'public') continue;\r\n                    var tr = document.createElement('tr');\r\n                    tr.innerHTML = '<td>' + column.column_name + '</td><td>' + column.data_type + '</td><td><a href=\"#\" onclick=\"deletecolumn(\\'' + column.column_name + '\\');\">Delete</a></td>';\r\n                    tbody.appendChild(tr);\r\n                }\r\n            }\r\n\r\n            window.addEventListener('load', () => {\r\n                tablename = location.search.substring(1);\r\n                document.getElementById('tablename').innerHTML = tablename;\r\n                loadcolumns();\r\n            });\r\n        \r\n        </script>\r\n    </head>\r\n    <body>\r\n        <cc-globalnav selectedurl=\"/setup/tables\"></cc-globalnav>\r\n        <header>\r\n            <img src=\"https://fonts.gstatic.com/s/i/materialicons/table_chart/v4/24px.svg\"/>\r\n            <subtitle>Setup &gt; <a href=\"/setup/tables\">Tabellen</a></subtitle>\r\n            <page-title><span id=\"tablename\"></span> - Spalten</page-title>\r\n            <button onclick=\"createcolumn();\">Neue Spalte</button>\r\n        </header>\r\n        <content>\r\n            <table>\r\n                <thead><tr><th>Name</th><th>Datentyp</th><th></th></tr></thead>\r\n                <tbody></tbody>\r\n            </table>\r\n        </content>\r\n    </body>\r\n</html>\r\n","contenttype":"text/html","url":"/setup/tables/columns","userid":"6f6b93ae-94e5-45b0-904f-83a8b37e1627","ispublic":true}],"tabs":[{"id":"cae375cc-28f5-4fbe-97a3-a3175a28b924","url":"/setup/tables","label":"Tabellen","appid":"9a80bfa4-72a9-43ba-b71c-521520afbb6c","userid":"6f6b93ae-94e5-45b0-904f-83a8b37e1627","ispublic":true},{"id":"10da6bd3-e1f8-4eb3-8251-148ccd08efbc","url":"/setup/sqlconsole","label":"SQL Konsole","appid":"9a80bfa4-72a9-43ba-b71c-521520afbb6c","userid":"6f6b93ae-94e5-45b0-904f-83a8b37e1627","ispublic":true},{"id":"da5b9bd2-2784-4a74-bf07-f32281efb363","url":"/setup/editor","label":"Editor","appid":"9a80bfa4-72a9-43ba-b71c-521520afbb6c","userid":"6f6b93ae-94e5-45b0-904f-83a8b37e1627","ispublic":true}]},"id":"fdcfddb4-6ab2-4597-b647-7a8930d07033","name":"setup","fields":{}}